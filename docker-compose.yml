services:
  datadog-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: datadog-agent
    pid: "host"
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE}
      - DD_ENV=${DD_ENV}
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_HOSTNAME=${HOSTNAME:-datadog-demo-local}
      - DD_HOSTNAME_TRUST_UTS_NAMESPACE=true
      - DD_SERVICE=${DD_SERVICE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /etc/os-release:/host/etc/os-release:ro
    privileged: true
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "agent", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  demo-expressjs:
    build:
      context: ./expressjs
      dockerfile: Dockerfile
    container_name: demo-expressjs
    ports:
      - "3001:3000"
    environment:
      - DD_AGENT_HOST=datadog-agent
      - DD_VERSION=${DD_VERSION}
      - DD_TRACE_DEBUG=${DD_TRACE_DEBUG}
      - DD_TRACE_ENABLED=${DD_TRACE_ENABLED}
      - NODE_ENV=${NODE_ENV}
      - DD_SERVICE=expressjs-service
      - DD_ENV=${DD_ENV}
    depends_on:
      datadog-agent:
        condition: service_healthy
    networks:
      - demo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  demo-php:
    build:
      context: ./flightphp
      dockerfile: Dockerfile
    container_name: demo-php
    volumes:
      - ./flightphp:/var/www/html
      - php-vendor:/var/www/html/vendor
    ports:
      - "8080:80"
    environment:
      - SERVER_NAME=${SERVER_NAME}
      - DD_AGENT_HOST=datadog-agent
      - DD_SERVICE=php-service
      - DD_ENV=${DD_ENV}
    command: >
      /bin/bash -c "echo 'ServerName localhost' >> /etc/apache2/apache2.conf && apache2-foreground"
    depends_on:
      datadog-agent:
        condition: service_healthy
    networks:
      - demo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  demo-fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: demo-fastapi
    volumes:
      - ./fastapi:/app
    ports:
      - "8001:8001"
    environment:
      - PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
      - DD_AGENT_HOST=datadog-agent
      - DD_PROFILING_ENABLED=${DD_PROFILING_ENABLED}
      - DD_SERVICE=fastapi-service
      - DD_ENV=${DD_ENV}
    depends_on:
      datadog-agent:
        condition: service_healthy
    networks:
      - demo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  demo-network:
    driver: bridge

volumes:
  php-vendor:
